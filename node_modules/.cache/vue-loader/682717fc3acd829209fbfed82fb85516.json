{"remainingRequest":"/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/DECO3801/searchMedicineGit/src/components/searchMedicine/medicinesResultCat.vue?vue&type=template&id=1a322dcd&scoped=true&","dependencies":[{"path":"/Users/apple/Desktop/DECO3801/searchMedicineGit/src/components/searchMedicine/medicinesResultCat.vue","mtime":1634485733684},{"path":"/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/DECO3801/searchMedicineGit/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}